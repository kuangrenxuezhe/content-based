// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supplement.proto

#ifndef PROTOBUF_supplement_2eproto__INCLUDED
#define PROTOBUF_supplement_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "proto/message.pb.h"
// @@protoc_insertion_point(includes)

namespace module {
namespace protocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_supplement_2eproto();
void protobuf_AssignDesc_supplement_2eproto();
void protobuf_ShutdownFile_supplement_2eproto();

class CategoryClick;
class CategoryDistribution;
class CategoryItem;
class Empty;

// ===================================================================

class Empty : public ::google::protobuf::Message {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:module.protocol.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_supplement_2eproto();
  friend void protobuf_AssignDesc_supplement_2eproto();
  friend void protobuf_ShutdownFile_supplement_2eproto();

  void InitAsDefaultInstance();
  static Empty* default_instance_;
};
// -------------------------------------------------------------------

class CategoryClick : public ::google::protobuf::Message {
 public:
  CategoryClick();
  virtual ~CategoryClick();

  CategoryClick(const CategoryClick& from);

  inline CategoryClick& operator=(const CategoryClick& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CategoryClick& default_instance();

  void Swap(CategoryClick* other);

  // implements Message ----------------------------------------------

  inline CategoryClick* New() const { return New(NULL); }

  CategoryClick* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CategoryClick& from);
  void MergeFrom(const CategoryClick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CategoryClick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // optional int32 category_id = 2;
  void clear_category_id();
  static const int kCategoryIdFieldNumber = 2;
  ::google::protobuf::int32 category_id() const;
  void set_category_id(::google::protobuf::int32 value);

  // optional int32 publish_time = 3;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 3;
  ::google::protobuf::int32 publish_time() const;
  void set_publish_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:module.protocol.CategoryClick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::int32 category_id_;
  ::google::protobuf::int32 publish_time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_supplement_2eproto();
  friend void protobuf_AssignDesc_supplement_2eproto();
  friend void protobuf_ShutdownFile_supplement_2eproto();

  void InitAsDefaultInstance();
  static CategoryClick* default_instance_;
};
// -------------------------------------------------------------------

class CategoryItem : public ::google::protobuf::Message {
 public:
  CategoryItem();
  virtual ~CategoryItem();

  CategoryItem(const CategoryItem& from);

  inline CategoryItem& operator=(const CategoryItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CategoryItem& default_instance();

  void Swap(CategoryItem* other);

  // implements Message ----------------------------------------------

  inline CategoryItem* New() const { return New(NULL); }

  CategoryItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CategoryItem& from);
  void MergeFrom(const CategoryItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CategoryItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional int32 category_id = 2;
  void clear_category_id();
  static const int kCategoryIdFieldNumber = 2;
  ::google::protobuf::int32 category_id() const;
  void set_category_id(::google::protobuf::int32 value);

  // optional int32 publish_time = 3;
  void clear_publish_time();
  static const int kPublishTimeFieldNumber = 3;
  ::google::protobuf::int32 publish_time() const;
  void set_publish_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:module.protocol.CategoryItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::int32 category_id_;
  ::google::protobuf::int32 publish_time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_supplement_2eproto();
  friend void protobuf_AssignDesc_supplement_2eproto();
  friend void protobuf_ShutdownFile_supplement_2eproto();

  void InitAsDefaultInstance();
  static CategoryItem* default_instance_;
};
// -------------------------------------------------------------------

class CategoryDistribution : public ::google::protobuf::Message {
 public:
  CategoryDistribution();
  virtual ~CategoryDistribution();

  CategoryDistribution(const CategoryDistribution& from);

  inline CategoryDistribution& operator=(const CategoryDistribution& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CategoryDistribution& default_instance();

  void Swap(CategoryDistribution* other);

  // implements Message ----------------------------------------------

  inline CategoryDistribution* New() const { return New(NULL); }

  CategoryDistribution* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CategoryDistribution& from);
  void MergeFrom(const CategoryDistribution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CategoryDistribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // repeated .module.protocol.ItemTag distribution = 2;
  int distribution_size() const;
  void clear_distribution();
  static const int kDistributionFieldNumber = 2;
  const ::module::protocol::ItemTag& distribution(int index) const;
  ::module::protocol::ItemTag* mutable_distribution(int index);
  ::module::protocol::ItemTag* add_distribution();
  ::google::protobuf::RepeatedPtrField< ::module::protocol::ItemTag >*
      mutable_distribution();
  const ::google::protobuf::RepeatedPtrField< ::module::protocol::ItemTag >&
      distribution() const;

  // @@protoc_insertion_point(class_scope:module.protocol.CategoryDistribution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::module::protocol::ItemTag > distribution_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_supplement_2eproto();
  friend void protobuf_AssignDesc_supplement_2eproto();
  friend void protobuf_ShutdownFile_supplement_2eproto();

  void InitAsDefaultInstance();
  static CategoryDistribution* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

// -------------------------------------------------------------------

// CategoryClick

// optional uint64 user_id = 1;
inline void CategoryClick::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CategoryClick::user_id() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryClick.user_id)
  return user_id_;
}
inline void CategoryClick::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryClick.user_id)
}

// optional int32 category_id = 2;
inline void CategoryClick::clear_category_id() {
  category_id_ = 0;
}
inline ::google::protobuf::int32 CategoryClick::category_id() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryClick.category_id)
  return category_id_;
}
inline void CategoryClick::set_category_id(::google::protobuf::int32 value) {
  
  category_id_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryClick.category_id)
}

// optional int32 publish_time = 3;
inline void CategoryClick::clear_publish_time() {
  publish_time_ = 0;
}
inline ::google::protobuf::int32 CategoryClick::publish_time() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryClick.publish_time)
  return publish_time_;
}
inline void CategoryClick::set_publish_time(::google::protobuf::int32 value) {
  
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryClick.publish_time)
}

// -------------------------------------------------------------------

// CategoryItem

// optional uint64 item_id = 1;
inline void CategoryItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CategoryItem::item_id() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryItem.item_id)
  return item_id_;
}
inline void CategoryItem::set_item_id(::google::protobuf::uint64 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryItem.item_id)
}

// optional int32 category_id = 2;
inline void CategoryItem::clear_category_id() {
  category_id_ = 0;
}
inline ::google::protobuf::int32 CategoryItem::category_id() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryItem.category_id)
  return category_id_;
}
inline void CategoryItem::set_category_id(::google::protobuf::int32 value) {
  
  category_id_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryItem.category_id)
}

// optional int32 publish_time = 3;
inline void CategoryItem::clear_publish_time() {
  publish_time_ = 0;
}
inline ::google::protobuf::int32 CategoryItem::publish_time() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryItem.publish_time)
  return publish_time_;
}
inline void CategoryItem::set_publish_time(::google::protobuf::int32 value) {
  
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryItem.publish_time)
}

// -------------------------------------------------------------------

// CategoryDistribution

// optional uint64 user_id = 1;
inline void CategoryDistribution::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CategoryDistribution::user_id() const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryDistribution.user_id)
  return user_id_;
}
inline void CategoryDistribution::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:module.protocol.CategoryDistribution.user_id)
}

// repeated .module.protocol.ItemTag distribution = 2;
inline int CategoryDistribution::distribution_size() const {
  return distribution_.size();
}
inline void CategoryDistribution::clear_distribution() {
  distribution_.Clear();
}
inline const ::module::protocol::ItemTag& CategoryDistribution::distribution(int index) const {
  // @@protoc_insertion_point(field_get:module.protocol.CategoryDistribution.distribution)
  return distribution_.Get(index);
}
inline ::module::protocol::ItemTag* CategoryDistribution::mutable_distribution(int index) {
  // @@protoc_insertion_point(field_mutable:module.protocol.CategoryDistribution.distribution)
  return distribution_.Mutable(index);
}
inline ::module::protocol::ItemTag* CategoryDistribution::add_distribution() {
  // @@protoc_insertion_point(field_add:module.protocol.CategoryDistribution.distribution)
  return distribution_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::module::protocol::ItemTag >*
CategoryDistribution::mutable_distribution() {
  // @@protoc_insertion_point(field_mutable_list:module.protocol.CategoryDistribution.distribution)
  return &distribution_;
}
inline const ::google::protobuf::RepeatedPtrField< ::module::protocol::ItemTag >&
CategoryDistribution::distribution() const {
  // @@protoc_insertion_point(field_list:module.protocol.CategoryDistribution.distribution)
  return distribution_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace module

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_supplement_2eproto__INCLUDED
